{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\reactreg\\\\new_registration\\\\src\\\\components\\\\Test.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport QuestionList from \"../data/question.json\";\nimport QuizResult from \"./QuizResult.js\";\nimport Question from \"./Question.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Test = () => {\n  _s();\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [markedAnswers, setMarkedAnswers] = useState(new Array(QuestionList.length));\n  const isQuestionEnd = currentQuestionIndex === QuestionList.length;\n  function calculateResult() {\n    let correct = 0;\n    QuestionList.forEach((question, index) => {\n      if (question.CorrectOptionIndex === markedAnswers[index]) {\n        correct++;\n      }\n    });\n    return {\n      total: QuestionList.length,\n      correct: correct,\n      percentage: Math.trunc(correct / QuestionList.length * 100)\n    };\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-screen\",\n    children: /*#__PURE__*/_jsxDEV(Question, {\n      question: QuestionList[currentQuestionIndex],\n      totalQuestions: QuestionList.length,\n      currentQuestionIndex: currentQuestionIndex + 1,\n      setAnswer: index => {\n        setMarkedAnswers(arr => {\n          let newArr = [...arr];\n          newArr[currentQuestionIndex - 1] = index;\n          return newArr;\n        });\n        setCurrentQuestionIndex(currentQuestionIndex + 1);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Test, \"5/Ub/99921SakabdjljTjF5ZABs=\");\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useState","QuestionList","QuizResult","Question","jsxDEV","_jsxDEV","Test","_s","currentQuestionIndex","setCurrentQuestionIndex","markedAnswers","setMarkedAnswers","Array","length","isQuestionEnd","calculateResult","correct","forEach","question","index","CorrectOptionIndex","total","percentage","Math","trunc","className","children","totalQuestions","setAnswer","arr","newArr","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Admin/reactreg/new_registration/src/components/Test.js"],"sourcesContent":["import React from 'react'\r\nimport { useState } from 'react'\r\nimport QuestionList from \"../data/question.json\"\r\nimport QuizResult from \"./QuizResult.js\";\r\nimport Question from \"./Question.js\";\r\n\r\n\r\n\r\nconst Test = () => {\r\n    const [currentQuestionIndex, setCurrentQuestionIndex]= useState(0);\r\n    const [markedAnswers, setMarkedAnswers] =  useState(new Array(QuestionList.length));\r\n    const isQuestionEnd= currentQuestionIndex === QuestionList.length;\r\n\r\n\r\n    function calculateResult(){\r\n        let correct=0;\r\n        QuestionList.forEach((question,index)=>{\r\n            if(question.CorrectOptionIndex === markedAnswers[index]){\r\n                correct++;\r\n            }\r\n        });\r\n        return{\r\n            total:QuestionList.length,\r\n            correct:correct,\r\n            percentage:Math.trunc((correct/QuestionList.length)*100)\r\n        };\r\n    }\r\n  return (\r\n    <div className='quiz-screen'>\r\n        {\r\n            \r\n                <Question\r\n                question ={QuestionList[currentQuestionIndex]}\r\n                totalQuestions = {QuestionList.length}\r\n                currentQuestionIndex = {currentQuestionIndex+1}\r\n                setAnswer={(index)=>{\r\n                    setMarkedAnswers((arr)=>{\r\n                        let newArr = [...arr];\r\n                        newArr[currentQuestionIndex-1]= index;\r\n                        return newArr;\r\n\r\n                    });\r\n                    setCurrentQuestionIndex(currentQuestionIndex+1);\r\n\r\n                }}\r\n                />\r\n            \r\n        }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Test"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,YAAY,MAAM,uBAAuB;AAChD,OAAOC,UAAU,MAAM,iBAAiB;AACxC,OAAOC,QAAQ,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIrC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM,CAACC,oBAAoB,EAAEC,uBAAuB,CAAC,GAAET,QAAQ,CAAC,CAAC,CAAC;EAClE,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAIX,QAAQ,CAAC,IAAIY,KAAK,CAACX,YAAY,CAACY,MAAM,CAAC,CAAC;EACnF,MAAMC,aAAa,GAAEN,oBAAoB,KAAKP,YAAY,CAACY,MAAM;EAGjE,SAASE,eAAeA,CAAA,EAAE;IACtB,IAAIC,OAAO,GAAC,CAAC;IACbf,YAAY,CAACgB,OAAO,CAAC,CAACC,QAAQ,EAACC,KAAK,KAAG;MACnC,IAAGD,QAAQ,CAACE,kBAAkB,KAAKV,aAAa,CAACS,KAAK,CAAC,EAAC;QACpDH,OAAO,EAAE;MACb;IACJ,CAAC,CAAC;IACF,OAAM;MACFK,KAAK,EAACpB,YAAY,CAACY,MAAM;MACzBG,OAAO,EAACA,OAAO;MACfM,UAAU,EAACC,IAAI,CAACC,KAAK,CAAER,OAAO,GAACf,YAAY,CAACY,MAAM,GAAE,GAAG;IAC3D,CAAC;EACL;EACF,oBACER,OAAA;IAAKoB,SAAS,EAAC,aAAa;IAAAC,QAAA,eAGhBrB,OAAA,CAACF,QAAQ;MACTe,QAAQ,EAAGjB,YAAY,CAACO,oBAAoB,CAAE;MAC9CmB,cAAc,EAAI1B,YAAY,CAACY,MAAO;MACtCL,oBAAoB,EAAIA,oBAAoB,GAAC,CAAE;MAC/CoB,SAAS,EAAGT,KAAK,IAAG;QAChBR,gBAAgB,CAAEkB,GAAG,IAAG;UACpB,IAAIC,MAAM,GAAG,CAAC,GAAGD,GAAG,CAAC;UACrBC,MAAM,CAACtB,oBAAoB,GAAC,CAAC,CAAC,GAAEW,KAAK;UACrC,OAAOW,MAAM;QAEjB,CAAC,CAAC;QACFrB,uBAAuB,CAACD,oBAAoB,GAAC,CAAC,CAAC;MAEnD;IAAE;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAGR;AAEV,CAAC;AAAA3B,EAAA,CA1CKD,IAAI;AAAA6B,EAAA,GAAJ7B,IAAI;AA4CV,eAAeA,IAAI;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}