[{"C:\\Users\\Admin\\reactreg\\new_registration\\src\\index.js":"1","C:\\Users\\Admin\\reactreg\\new_registration\\src\\App.js":"2","C:\\Users\\Admin\\reactreg\\new_registration\\src\\reportWebVitals.js":"3","C:\\Users\\Admin\\reactreg\\new_registration\\src\\components\\Header.js":"4","C:\\Users\\Admin\\reactreg\\new_registration\\src\\components\\Home.js":"5","C:\\Users\\Admin\\reactreg\\new_registration\\src\\components\\Sign_img.js":"6","C:\\Users\\Admin\\reactreg\\new_registration\\src\\components\\Firsthome.js":"7","C:\\Users\\Admin\\reactreg\\new_registration\\src\\components\\Test.js":"8","C:\\Users\\Admin\\reactreg\\new_registration\\src\\components\\QuizResult.js":"9","C:\\Users\\Admin\\reactreg\\new_registration\\src\\components\\Question.js":"10","C:\\Users\\Admin\\reactreg\\new_registration\\src\\components\\Instruction.js":"11"},{"size":580,"mtime":1679118159601,"results":"12","hashOfConfig":"13"},{"size":677,"mtime":1679998064026,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1676908107641,"results":"15","hashOfConfig":"13"},{"size":646,"mtime":1680011811274,"results":"16","hashOfConfig":"13"},{"size":7658,"mtime":1680103358259,"results":"17","hashOfConfig":"13"},{"size":2781,"mtime":1680019828016,"results":"18","hashOfConfig":"13"},{"size":2660,"mtime":1680000325203,"results":"19","hashOfConfig":"13"},{"size":1731,"mtime":1679930308966,"results":"20","hashOfConfig":"13"},{"size":304,"mtime":1679930293348,"results":"21","hashOfConfig":"13"},{"size":2128,"mtime":1679839722844,"results":"22","hashOfConfig":"13"},{"size":2917,"mtime":1680000042974,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ir2g9j",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Admin\\reactreg\\new_registration\\src\\index.js",[],[],"C:\\Users\\Admin\\reactreg\\new_registration\\src\\App.js",[],[],"C:\\Users\\Admin\\reactreg\\new_registration\\src\\reportWebVitals.js",[],[],[],"C:\\Users\\Admin\\reactreg\\new_registration\\src\\components\\Header.js",[],[],[],"C:\\Users\\Admin\\reactreg\\new_registration\\src\\components\\Home.js",["60","61","62"],[],"import React from 'react'\r\nimport Form from 'react-bootstrap/Form'\r\nimport  Button  from 'react-bootstrap/Button'\r\nimport { useRef } from 'react';\r\nimport { useState } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Webcam from 'react-webcam';\r\n\r\n\r\nconst Home = () => {\r\n    const webRef = useRef(null);\r\n    const [url, setUrl] = useState(null);\r\n\r\n    const capturePhoto = React.useCallback(async () => {\r\n        const imageSrc = webRef.current.getScreenshot()\r\n        setUrl(imageSrc)\r\n    }, [webRef])\r\n\r\n    const onUserMedia = (e) => {\r\n        console.log(e)\r\n    }\r\n    const [inpval,setInpval] =useState({\r\n        name:\"\",\r\n        lastName:\"\",\r\n        email:\"\",\r\n        dob:\"\",\r\n        collegeName:\"\",\r\n        password:\"\"\r\n    })\r\n    console.log(inpval);\r\n    const [data,setData] = useState([])\r\n\r\n    const getData = (e)=>{\r\n        // console.log(e.target.value);\r\n        const{value,name}=e.target;\r\n        // console.log(value,name);\r\n\r\n        setInpval(()=>{\r\n            return{\r\n                ...inpval,\r\n                [name]:value\r\n\r\n            }\r\n        })\r\n    }\r\n    const addData =(e)=>{\r\n        e.preventDefault();\r\n        const {name,lastName,email,dob,collegeName,password}=inpval;\r\n\r\n        if(name === \"\"){\r\n            alert(\"First name is required\")\r\n        }\r\n        else if(email===\"\"){\r\n            alert(\"email field is required\")\r\n        }else if(!email.includes(\"@\")){\r\n            alert(\"Enter valid email address\")\r\n        } else if( dob===\"\"){\r\n            alert(\"Date of birth is required\")\r\n        }\r\n        else if(password.length < 8){\r\n            alert(\"password length should be greater than 8\")\r\n        }\r\n        else{\r\n            console.log(\"Data Added successfully\");\r\n            localStorage.setItem(\"CandidateData\",JSON.stringify([...data,inpval]));\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container mt-5\">\r\n                <section className='d-flex justify-content-between'>\r\n                    <div className='left-data mt-1 p-3' style={{width:\"100%\"}}>\r\n                    <Card style={{ width: '40rem', height: '50rem',padding:'2rem'}}>\r\n                        <h3 className='text-center col-lg-10'>Register</h3>\r\n                        <Form>\r\n                            <Form.Group className=\" mb-3 col-lg-10\" controlId=\"formBasicEmail\">\r\n                                <Form.Label>First Name</Form.Label>\r\n                                <Form.Control type=\"text\" name='name' onChange={getData} placeholder=\"Enter First Name\" />\r\n                                \r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3 col-lg-10\" controlId=\"formBasicEmail\">\r\n                                <Form.Label>Last Name</Form.Label>\r\n                                <Form.Control type=\"text\" name='lastName' onChange={getData} placeholder=\"Enter Last Name\" />\r\n                                \r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3 col-lg-10\" controlId=\"formBasicEmail\">\r\n                                <Form.Label>Email address</Form.Label>\r\n                                <Form.Control type=\"email\" name='email' onChange={getData} placeholder=\"Enter email\" />\r\n                                <Form.Text className=\"text-muted\">\r\n                                    We'll never share your email with anyone else.\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3 col-lg-10\" controlId=\"formBasicEmail\">\r\n                                <Form.Label>Date Of Birth</Form.Label>\r\n                                <Form.Control type=\"date\" name='dob' onChange={getData} placeholder=\"Enter date of birth\" />\r\n                                \r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3 col-lg-10\" controlId=\"formBasicEmail\">\r\n                                <Form.Label>College/University</Form.Label>\r\n                                <Form.Control type=\"text\" name='collegeName' onChange={getData} placeholder=\"Enter college or university\" />\r\n                                \r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3 col-lg-10\" controlId=\"formBasicPassword\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control type=\"password\" name='password' onChange={getData} placeholder=\"Password\" />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3 p-3 col-lg-10\" style={{ background:\"rgb(197, 230, 220)\",borderRadius:8}} controlId=\"formBasicCheckbox\">\r\n                                <Form.Check className=\"text-muted\" type=\"checkbox\" label=\"By registering for this opportunity you agree to share the data mentioned in this form.\" />\r\n                                \r\n                            </Form.Group>\r\n                            <Button className='mb-5 col-lg-10' onClick={addData} style={{border:\"rgb(67,185,127)\"}} variant=\"success\" type=\"submit\">\r\n                                Submit\r\n                            </Button>\r\n                        </Form>\r\n                        </Card>\r\n                    </div>\r\n\r\n                    <div className='right-data mt-4 mb-5'>\r\n                {/* <div className='sign_img mt-5' >\r\n                    <img src=\"./sign.svg\" style={{ maxWidth: 400, height: 400 }} alt=\"\" />\r\n                </div> */}\r\n                <Card style={{ width: '23rem', height: '60rem' }}>\r\n                    {/* <Card.Img variant=\"top\" src=\"./user2.svg\" /> */}\r\n                    <Webcam\r\n                        ref={webRef}\r\n                        screenshotFormat=\"image/png\"\r\n                        onUserMedia={onUserMedia}\r\n                    />\r\n                    {/* <img  src=\"./new.avif\" style={{ maxWidth: 300, height: 300, border:\"rgb(20,20,20)\", marginLeft:'2rem',marginTop:'1rem',marginRight:'2rem' }} alt=\"\" /> */}\r\n                    <Card.Body>\r\n                        <Card.Title>Photo Authentication</Card.Title>\r\n                        <Card.Text>\r\n                            Please click your photo using the below button for Authentication purpose\r\n                        </Card.Text>\r\n                        <Button className='col-lg-12' variant=\"success\" style={{ border: \"rgb(67,185,127)\", justifySelf: 'center', marginBottom: '1rem' }} onClick={capturePhoto}>Click Image</Button>\r\n                        <Card.Text>\r\n                            You Can view Your photo after clicking the image\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                    <Card style={{ width: '22rem', height: '16.5rem', background: 'rgb(141, 143, 148)', margin: '0.5rem' }}>\r\n                        {url && (\r\n                            <Card.Img variant=\"top\" src={url} alt=\"ScreenShot\" />\r\n\r\n                        )}\r\n                    </Card>\r\n                    <Card.Body>\r\n\r\n                        <Card.Text>\r\n                            If you want Clear the photo and take another photo please click the below Clear Image Button\r\n                        </Card.Text>\r\n                        <Button className='col-lg-12' variant=\"success\" onClick={() => setUrl(null)}>Clear Image</Button>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>  \r\n                </section>\r\n\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Home","C:\\Users\\Admin\\reactreg\\new_registration\\src\\components\\Sign_img.js",[],[],"C:\\Users\\Admin\\reactreg\\new_registration\\src\\components\\Firsthome.js",[],[],"C:\\Users\\Admin\\reactreg\\new_registration\\src\\components\\Test.js",[],[],"C:\\Users\\Admin\\reactreg\\new_registration\\src\\components\\QuizResult.js",[],[],"C:\\Users\\Admin\\reactreg\\new_registration\\src\\components\\Question.js",["63"],[],"C:\\Users\\Admin\\reactreg\\new_registration\\src\\components\\Instruction.js",[],[],{"ruleId":"64","severity":1,"message":"65","line":31,"column":17,"nodeType":"66","messageId":"67","endLine":31,"endColumn":24},{"ruleId":"64","severity":1,"message":"68","line":48,"column":21,"nodeType":"66","messageId":"67","endLine":48,"endColumn":29},{"ruleId":"64","severity":1,"message":"69","line":48,"column":40,"nodeType":"66","messageId":"67","endLine":48,"endColumn":51},{"ruleId":"70","severity":1,"message":"71","line":27,"column":7,"nodeType":"72","endLine":27,"endColumn":17,"suggestions":"73"},"no-unused-vars","'setData' is assigned a value but never used.","Identifier","unusedVar","'lastName' is assigned a value but never used.","'collegeName' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'gotoNextQuestion'. Either include it or remove the dependency array.","ArrayExpression",["74"],{"desc":"75","fix":"76"},"Update the dependencies array to be: [gotoNextQuestion, question]",{"range":"77","text":"78"},[849,859],"[gotoNextQuestion, question]"]